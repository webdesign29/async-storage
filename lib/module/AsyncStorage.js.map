{"version":3,"names":["mergeOptions","merge","bind","concatArrays","ignoreUndefined","mergeLocalStorageItem","key","value","oldValue","window","localStorage","getItem","oldObject","JSON","parse","newObject","nextValue","stringify","setItem","createPromise","getValue","callback","Promise","resolve","reject","err","createPromiseAll","promises","processResult","all","then","result","errors","AsyncStorage","removeItem","mergeItem","clear","getAllKeys","numberOfKeys","length","keys","i","push","flushGetRequests","undefined","multiGet","map","multiSet","keyValuePairs","item","multiRemove","multiMerge"],"sources":["AsyncStorage.ts"],"sourcesContent":["/**\r\n * Copyright (c) Nicolas Gallagher.\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n// @ts-ignore Cannot find module 'merge-options' or its corresponding type declarations\r\nimport mergeOptions from 'merge-options';\r\nimport type {\r\n  AsyncStorageStatic,\r\n  MultiCallback,\r\n  MultiGetCallback,\r\n} from './types';\r\n\r\nconst merge = mergeOptions.bind({\r\n  concatArrays: true,\r\n  ignoreUndefined: true,\r\n});\r\n\r\nfunction mergeLocalStorageItem(key: string, value: string) {\r\n  const oldValue = window.localStorage.getItem(key);\r\n  if (oldValue) {\r\n    const oldObject = JSON.parse(oldValue);\r\n    const newObject = JSON.parse(value);\r\n    const nextValue = JSON.stringify(merge(oldObject, newObject));\r\n    window.localStorage.setItem(key, nextValue);\r\n  } else {\r\n    window.localStorage.setItem(key, value);\r\n  }\r\n}\r\n\r\nfunction createPromise<Result, Callback extends Function>(\r\n  getValue: () => Result,\r\n  callback?: Callback\r\n): Promise<Result> {\r\n  return new Promise((resolve, reject) => {\r\n    try {\r\n      const value = getValue();\r\n      callback?.(null, value);\r\n      resolve(value);\r\n    } catch (err) {\r\n      callback?.(err);\r\n      reject(err);\r\n    }\r\n  });\r\n}\r\n\r\nfunction createPromiseAll<ReturnType, Result, ResultProcessor extends Function>(\r\n  promises: Promise<Result>[],\r\n  callback?: MultiCallback | MultiGetCallback,\r\n  processResult?: ResultProcessor\r\n): Promise<ReturnType> {\r\n  return Promise.all(promises).then(\r\n    (result) => {\r\n      const value = processResult?.(result) ?? null;\r\n      callback?.(null, value);\r\n      return Promise.resolve(value);\r\n    },\r\n    (errors) => {\r\n      callback?.(errors);\r\n      return Promise.reject(errors);\r\n    }\r\n  );\r\n}\r\n\r\nconst AsyncStorage: AsyncStorageStatic = {\r\n  /**\r\n   * Fetches `key` value.\r\n   */\r\n  getItem: (key, callback) => {\r\n    if(typeof window === 'undefined') return Promise.resolve(\r\n      callback === null || callback === void 0 ? void 0 : callback(null, null)\r\n    );\r\n    return createPromise(() => window.localStorage.getItem(key), callback);\r\n  },\r\n\r\n  /**\r\n   * Sets `value` for `key`.\r\n   */\r\n  setItem: (key, value, callback) => {\r\n    return createPromise(\r\n      () => window.localStorage.setItem(key, value),\r\n      callback\r\n    );\r\n  },\r\n\r\n  /**\r\n   * Removes a `key`\r\n   */\r\n  removeItem: (key, callback) => {\r\n    return createPromise(() => window.localStorage.removeItem(key), callback);\r\n  },\r\n\r\n  /**\r\n   * Merges existing value with input value, assuming they are stringified JSON.\r\n   */\r\n  mergeItem: (key, value, callback) => {\r\n    return createPromise(() => mergeLocalStorageItem(key, value), callback);\r\n  },\r\n\r\n  /**\r\n   * Erases *all* AsyncStorage for the domain.\r\n   */\r\n  clear: (callback) => {\r\n    return createPromise(() => window.localStorage.clear(), callback);\r\n  },\r\n\r\n  /**\r\n   * Gets *all* keys known to the app, for all callers, libraries, etc.\r\n   */\r\n  getAllKeys: (callback) => {\r\n    return createPromise(() => {\r\n      const numberOfKeys = window.localStorage.length;\r\n      const keys: string[] = [];\r\n      for (let i = 0; i < numberOfKeys; i += 1) {\r\n        const key = window.localStorage.key(i) || '';\r\n        keys.push(key);\r\n      }\r\n      return keys;\r\n    }, callback);\r\n  },\r\n\r\n  /**\r\n   * (stub) Flushes any pending requests using a single batch call to get the data.\r\n   */\r\n  flushGetRequests: () => undefined,\r\n\r\n  /**\r\n   * multiGet resolves to an array of key-value pair arrays that matches the\r\n   * input format of multiSet.\r\n   *\r\n   *   multiGet(['k1', 'k2']) -> [['k1', 'val1'], ['k2', 'val2']]\r\n   */\r\n  multiGet: (keys, callback) => {\r\n    const promises = keys.map((key) => AsyncStorage.getItem(key));\r\n    const processResult = (result: string[]) =>\r\n      result.map((value, i) => [keys[i], value]);\r\n    return createPromiseAll(promises, callback, processResult);\r\n  },\r\n\r\n  /**\r\n   * Takes an array of key-value array pairs.\r\n   *   multiSet([['k1', 'val1'], ['k2', 'val2']])\r\n   */\r\n  multiSet: (keyValuePairs, callback) => {\r\n    const promises = keyValuePairs.map((item) =>\r\n      AsyncStorage.setItem(item[0], item[1])\r\n    );\r\n    return createPromiseAll(promises, callback);\r\n  },\r\n\r\n  /**\r\n   * Delete all the keys in the `keys` array.\r\n   */\r\n  multiRemove: (keys, callback) => {\r\n    const promises = keys.map((key) => AsyncStorage.removeItem(key));\r\n    return createPromiseAll(promises, callback);\r\n  },\r\n\r\n  /**\r\n   * Takes an array of key-value array pairs and merges them with existing\r\n   * values, assuming they are stringified JSON.\r\n   *\r\n   *   multiMerge([['k1', 'val1'], ['k2', 'val2']])\r\n   */\r\n  multiMerge: (keyValuePairs, callback) => {\r\n    const promises = keyValuePairs.map((item) =>\r\n      AsyncStorage.mergeItem(item[0], item[1])\r\n    );\r\n    return createPromiseAll(promises, callback);\r\n  },\r\n};\r\n\r\nexport default AsyncStorage;\r\n"],"mappings":"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"}