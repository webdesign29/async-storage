{"version":3,"names":["NativeModules","TurboModuleRegistry","shouldFallbackToLegacyNativeModule","RCTAsyncStorage","get"],"sources":["RCTAsyncStorage.ts"],"sourcesContent":["// @ts-ignore Module '\"react-native\"' has no exported member 'TurboModuleRegistry'.\r\nimport { NativeModules, TurboModuleRegistry } from 'react-native';\r\nimport { shouldFallbackToLegacyNativeModule } from './shouldFallbackToLegacyNativeModule';\r\n\r\nlet RCTAsyncStorage =\r\n  NativeModules['PlatformLocalStorage'] || // Support for external modules, like react-native-windows\r\n  NativeModules['RNC_AsyncSQLiteDBStorage'] ||\r\n  NativeModules['RNCAsyncStorage'];\r\n\r\nif (!RCTAsyncStorage && shouldFallbackToLegacyNativeModule()) {\r\n  // TurboModuleRegistry falls back to NativeModules so we don't have to try go\r\n  // assign NativeModules' counterparts if TurboModuleRegistry would resolve\r\n  // with undefined.\r\n  if (TurboModuleRegistry) {\r\n    RCTAsyncStorage =\r\n      TurboModuleRegistry.get('AsyncSQLiteDBStorage') ||\r\n      TurboModuleRegistry.get('AsyncLocalStorage');\r\n  } else {\r\n    RCTAsyncStorage =\r\n      NativeModules['AsyncSQLiteDBStorage'] ||\r\n      NativeModules['AsyncLocalStorage'];\r\n  }\r\n}\r\n\r\nexport default RCTAsyncStorage;\r\n"],"mappings":"AAAA;AACA,SAASA,aAAT,EAAwBC,mBAAxB,QAAmD,cAAnD;AACA,SAASC,kCAAT,QAAmD,sCAAnD;AAEA,IAAIC,eAAe,GACjBH,aAAa,CAAC,sBAAD,CAAb,IAAyC;AACzCA,aAAa,CAAC,0BAAD,CADb,IAEAA,aAAa,CAAC,iBAAD,CAHf;;AAKA,IAAI,CAACG,eAAD,IAAoBD,kCAAkC,EAA1D,EAA8D;EAC5D;EACA;EACA;EACA,IAAID,mBAAJ,EAAyB;IACvBE,eAAe,GACbF,mBAAmB,CAACG,GAApB,CAAwB,sBAAxB,KACAH,mBAAmB,CAACG,GAApB,CAAwB,mBAAxB,CAFF;EAGD,CAJD,MAIO;IACLD,eAAe,GACbH,aAAa,CAAC,sBAAD,CAAb,IACAA,aAAa,CAAC,mBAAD,CAFf;EAGD;AACF;;AAED,eAAeG,eAAf"}